version: '3'
services:
  coordinator: # COORDINATOR
    image: 127.0.0.1:7000/SM_coordinator
    build:
      context: ./ServiceMersh
      dockerfile: ./Dockerfile
    ports:
      - "25000:5555"
    volumes:
      - ./LOGS/coordinator/:/home/app/logs #for debugging
    restart: always
    networks:
      - service_mersh
    depends_on:
      - tps_manager
    deploy: 
      placement: 
        constraints: 
          - node.role == manager

########### BB services ############################

  deep_learning:
    image: 127.0.0.1:7000/SM_BB_deeplearning
    build:
      context: ./BuildingBlocks/DeepLearning
      dockerfile: ./Dockerfile
    restart: always
    volumes:
      - ./LOGS/deep_learning/:/home/app/logs #for debugging
    networks:
      - service_mersh
    depends_on:
      - coordinator

  text_preprocessing:
    image: 127.0.0.1:7000/SM_BB_text_preprocessing
    build:
      context: ./BuildingBlocks/TextPreprocessing
      dockerfile: ./Dockerfile
    restart: always
    volumes:
      - ./LOGS/text_preprocessing/:/home/app/logs #for debugging
    networks:
      - service_mersh
    depends_on:
      - coordinator

  text_processing: 
    image: 127.0.0.1:7000/SM_BB_text_processing
    build:
      context: ./BuildingBlocks/TextProcessing
      dockerfile: ./Dockerfile
    restart: always
    volumes:
      - ./LOGS/text_processing/:/home/app/logs #for debugging
    networks:
      - service_mersh
    depends_on:
      - coordinator

  text_classification:
    image: 127.0.0.1:7000/SM_BB_calsification
    build:
      context: ./BuildingBlocks/TextClassification
      dockerfile: ./Dockerfile
    restart: always
    volumes:
      - ./LOGS/text_classification/:/home/app/logs #for debugging
    networks:
      - service_mersh
    depends_on:
      - coordinator

  preprocessing:
    image: 127.0.0.1:7000/SM_BB_preprocessing
    build:
      context: ./BuildingBlocks/Preprocessing
      dockerfile: ./Dockerfile
    restart: always
    volumes:
      - ./LOGS/preprocessing/:/home/app/logs #for debugging
    networks:
      - service_mersh
    depends_on:
      - coordinator

  bb_tps: # tools to clean data
    image: 127.0.0.1:7000/SM_BB_tps
    build:
      context: ./BuildingBlocks/TS
      dockerfile: ./Dockerfile
    volumes:
      - ./LOGS/tps/:/home/app/logs #for debugging
    networks:
      - service_mersh
    restart: always
    depends_on:
      - coordinator

  bb_converters: # tools to convert file formats
    image: 127.0.0.1:7000/SM_BB_converters
    build:
      context: ./BuildingBlocks/Converters
      dockerfile: ./Dockerfile
    volumes:
      - ./LOGS/converters/:/home/app/logs #for debugging
    networks:
      - service_mersh
    restart: always
    depends_on:
      - coordinator

  bb_acquisition: # tools to download data
    image: 127.0.0.1:7000/SM_BB_acquisition
    build:
      context: ./BuildingBlocks/Acq
      dockerfile: ./Dockerfile
    volumes:
      - ./LOGS/acquisition/:/home/app/logs #for debugging
      - ./localdata/:/home/app/REQUEST/input_data
    networks:
      - service_mersh
    restart: always
    depends_on:
      - coordinator
    deploy: 
      placement: 
        constraints: 
          - node.role == manager

  bb_grobid:
    image: 127.0.0.1:7000/SM_BB_grobid
    build:
      context: ./BuildingBlocks/Grobid
      dockerfile: ./Dockerfile
    volumes:
      - ./LOGS/grobid/:/home/app/logs #for debugging
    networks:
      - service_mersh
    restart: always
    depends_on:
      - coordinator

  bb_glove:
    image: 127.0.0.1:7000/SM_BB_glove
    build:
      context: ./BuildingBlocks/Glove
      dockerfile: ./Dockerfile
    volumes:
      - ./LOGS/glove/:/home/app/logs #for debugging
    networks:
      - service_mersh
    restart: always
    depends_on:
      - coordinator
###########################################
############## TPS SERVICES ###############
###########################################

  tps_manager: #API Gatewaey THE MANAGER
    image: 127.0.0.1:7000/tps_manager
    container_name: TPS_Manager
    build:
      context: ./TPS/Manager/
      dockerfile: ./Dockerfile
    environment:      
      CONFIGPATH: ./CONFIG/ #configuration location
      SCHEMAPATH: ./SCHEMA/ #data location
      DATABASE: mongodb #database
      CENTINEL: none #master watcher (must be active)
    volumes:
      - ./TPS/Manager/:/home/ #for debugging
      - ./TPS/:/home/CONFIG/
      #- ./TEST/:/home/SCHEMA/
      #- /tmp/pruebas/TPSSCHEMA/:/home/SCHEMA/ #workflow dagon schema
    ports:
      - "54350:5000"
    expose:
      - "5000"
    restart: always
    networks:
      - TPS_net
      - service_mersh

  mongodb: # tps manager mongoDB
    container_name: DB_TPS_data
    image: mongo:latest
    restart: always
    environment:
      data-volume: /data/db
      MONGO_INITDB_DATABASE: TPS_Data
    volumes:
      - data-volume:/data/db
      #- ./Configuration/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - 27018:27017
    networks:
      - TPS_net
    depends_on:
      - tps_manager

  clustering: # API Gateway container
    image: 127.0.0.1:7000/tps_clustering
    container_name: TPS_clustering
    #image: 127.0.0.1:5000/meteots_clustering_w1
    build:
      context: ./TPS/Services/Clustering
      dockerfile: ./Dockerfile
    networks:
      - TPS_net
    restart: always

  summary: # summary
    image: 127.0.0.1:7000/tps_summary
    container_name: TPS_summary
    build:
      context: ./TPS/Services/Summary/
      dockerfile: ./Dockerfile
    restart: always
    networks:
      - TPS_net
    ports:
      - 11002:80
    depends_on:
      - tps_manager

  clusteringtools: # tools
    image: 127.0.0.1:7000/tps_clustering_tools
    container_name: TPS_clustering_tools
    build:
      context: ./TPS/Services/ClusterAnalysis/
      dockerfile: ./Dockerfile
    restart: always
    networks:
      - TPS_net
    ports:
      - 3131:80
    depends_on:
      - tps_manager

  cleaningtools: # tools to clean data
    image: 127.0.0.1:7000/tps_cleaning_tools
    container_name: TPS_cleaning_tools
    #image: 127.0.0.1:5000/TPS_cleaning_tools
    build:
      context: ./TPS/Services/CleaningTools
      dockerfile: ./Dockerfile
    networks:
      - TPS_net
      - service_mersh
    restart: always

  graphics: # service to graphic data
    image: 127.0.0.1:7000/tps_graphics
    container_name: TPS_graphics
    #image: 127.0.0.1:5000/TPS_cleaning_tools
    build:
      context: ./TPS/Services/Graficas
      dockerfile: ./Dockerfile
#    volumes:
#      - ./imagenes/:/app/static/
    networks:
      - TPS_net
    ports:
      - 3132:80
    restart: always

###########################################
############## external services ###############
###########################################

  grobid: # tools to clean data
    container_name: grobid
    image: lfoppiano/grobid:0.6.1
    environment:      
      GROBID__NB_THREADS: 2 #configuration location
    networks:
      - service_mersh
    restart: always
    ports:
      - 3133:8070
      - 3134:8071

###########################################
############## PAXOS NETWORK ###############
###########################################

  accepter_1: # accepter
    image: 127.0.0.1:7000/paxos
    container_name: accepter1
    build:
      context: ./NonFunctional/Paxos
      dockerfile: ./Dockerfile
    restart: always
    networks:
      - service_mersh
    depends_on:
      - coordinator

  accepter_2: # accepter
    image: 127.0.0.1:7000/paxos
    container_name: accepter2
    build:
      context: ./NonFunctional/Paxos
      dockerfile: ./Dockerfile
    restart: always
    networks:
      - service_mersh
    depends_on:
      - coordinator
      
  accepter_3: # accepter
    image: 127.0.0.1:7000:7000/paxos
    container_name: accepter3
    build:
      context: ./NonFunctional/Paxos
      dockerfile: ./Dockerfile
    restart: always
    networks:
      - service_mersh
    depends_on:
      - coordinator

networks: 
  service_mersh:
  TPS_net:

volumes:
  data-volume:
